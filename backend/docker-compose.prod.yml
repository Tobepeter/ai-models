services:
  app:
    image: ${IMAGE_NAME} # 使用构建好的镜像
    container_name: ai-models-backend
    ports:
      - '8080:8080'
    env_file:
      - .env # 从文件加载环境变量
    environment:
      - GO_ENV=production
    restart: unless-stopped
    depends_on:
      - db
      - redis
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:8080/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15
    container_name: ai-models-db
    environment:
      - POSTGRES_DB=ai_models
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=apppassword
      - POSTGRES_ROOT_PASSWORD=rootpassword
      - TZ=Asia/Shanghai
      - PGTZ=Asia/Shanghai
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
      # - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: ai-models-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
