version: '3.8'

services:
  app:
    image: ${IMAGE_NAME}  # 使用构建好的镜像
    container_name: ai-models-backend
    ports:
      - "8080:8080"
    env_file:
      - .env  # 从文件加载环境变量
    environment:
      - GO_ENV=production
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # db:
  #   image: mysql:8.0
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
  #     - MYSQL_DATABASE=${DB_NAME}
  #     - MYSQL_USER=${DB_USER}
  #     - MYSQL_PASSWORD=${DB_APP_PASSWORD}
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #     - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
  #   restart: unless-stopped
  #   networks:
  #     - app-network

  # redis:
  #   image: redis:7-alpine
  #   command: redis-server --requirepass ${REDIS_PASSWORD}
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - app-network

# volumes:
#   mysql_data:
#   redis_data:

networks:
  app-network:
    driver: bridge