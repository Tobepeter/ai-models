name: Deploy to GitHub Pages

on:
  # NOTE: 目前仅支持手动触发，不然一直上传 OSS，浪费流量
  # push:
  #   branches: [main, master]
  # pull_request:
  #   branches: [main, master]
  workflow_dispatch:

# 设置 GITHUB_TOKEN 权限以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true # 取消正在运行的部署

jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    env:
      VITE_SILICON_API_KEY: ${{ secrets.VITE_SILICON_API_KEY }}
      VITE_OPENROUTER_API_KEY: ${{ secrets.VITE_OPENROUTER_API_KEY }}
      VITE_DASHSCOPE_API_KEY: ${{ secrets.VITE_DASHSCOPE_API_KEY }}
      VERBOSE: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true # 自动开启此功能，如有权限，不需要去后台配置

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Upload dist artifact for OSS
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: ./dist

  # 部署作业
  deploy-github-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-oss:
    runs-on: ubuntu-latest
    needs: build
    env:
      OSS_DEPLOY_ENABLE: true
      VERBOSE: true

    # NOTE：其实和build都是npm脚本，但是还是拆开了，所以会有重复的install
    #  但其实有npm cache，而且github action中其实checkout虽然重复，但是速度还是很快的
    #  同时，其实可以单独多次上传artifact
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist

      - name: Deploy to OSS
        run: npm run deploy
        env:
          VITE_OSS_BUCKET: ${{ secrets.VITE_OSS_BUCKET }}
          VITE_OSS_REGION: ${{ secrets.VITE_OSS_REGION }}
          VITE_OSS_ACCESS_KEY_ID: ${{ secrets.VITE_OSS_ACCESS_KEY_ID }}
          VITE_OSS_ACCESS_KEY_SECRET: ${{ secrets.VITE_OSS_ACCESS_KEY_SECRET }}
          OSS_ROLE_ARN: ${{ secrets.OSS_ROLE_ARN }}

  deploy-fe:
    runs-on: ubuntu-latest
    needs: build
    env:
      OSS_DEPLOY_ENABLE: true
      VERBOSE: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist

      - name: Deploy Frontend
        run: npm run deploy
        env:
          VITE_OSS_BUCKET: ${{ secrets.VITE_OSS_BUCKET }}
          VITE_OSS_REGION: ${{ secrets.VITE_OSS_REGION }}
          VITE_OSS_ACCESS_KEY_ID: ${{ secrets.VITE_OSS_ACCESS_KEY_ID }}
          VITE_OSS_ACCESS_KEY_SECRET: ${{ secrets.VITE_OSS_ACCESS_KEY_SECRET }}
          OSS_ROLE_ARN: ${{ secrets.OSS_ROLE_ARN }}
