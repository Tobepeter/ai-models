# GitHub Actions Workflow 示例
# 这是一个为 Vite React SPA 项目设计的基础 CI/CD 流程

name: CI/CD Pipeline

# 触发条件
on:
  # 当推送到 main 分支时触发
  push:
    branches: [ main, develop ]
  # 当创建 Pull Request 到 main 分支时触发
  pull_request:
    branches: [ main ]
  # 手动触发
  workflow_dispatch:

# 环境变量（全局）
env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

# 作业定义
jobs:
  # 代码质量检查作业
  lint-and-test:
    name: 代码检查和测试
    runs-on: ubuntu-latest
    
    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v4
      
      # 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      # 安装依赖
      - name: Install dependencies
        run: npm ci
      
      # 类型检查
      - name: Type check
        run: npm run type-check
      
      # 代码格式检查
      - name: Format check
        run: npm run format:check
      
      # ESLint 检查
      - name: Lint check
        run: npm run lint
      
      # 运行测试
      - name: Run tests
        run: npm run test
        env:
          CI: true

  # 构建作业
  build:
    name: 构建应用
    runs-on: ubuntu-latest
    needs: lint-and-test  # 依赖于 lint-and-test 作业
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      # 构建应用
      - name: Build application
        run: npm run build
      
      # 上传构建产物
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/
          retention-days: 7

  # 部署作业（仅在 main 分支）
  deploy:
    name: 部署到 GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    # 设置权限
    permissions:
      contents: read
      pages: write
      id-token: write
    
    # 部署环境
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
